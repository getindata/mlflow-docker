name: Build & Publish Image

on:
  push:
    tags:
      - '*.*.*'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2

      - uses: docker/setup-buildx-action@v1
        id: buildx
        with:
          install: true

      - name: Set env
        run: echo "RELEASE_VERSION=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

      - name: Build image (standard)
        run: |
          docker build --tag docker.io/library/mlflow:standard --build-arg MLFLOW_VERSION=$RELEASE_VERSION  --load ./standard

      - name: Build image (appengine)
        run: |    
          docker build --tag mlflow:appengine --build-arg MLFLOW_VERSION=$RELEASE_VERSION --build-arg BASE_IMAGE=docker.io/library/mlflow:standard --load ./appengine 

      - name: Publish Image (version / standard)
        uses: mattes/gce-docker-push-action@v1
        with:
          creds: ${{ secrets.PUBLIC_GCR_DEPLOY_SA_KEY }}
          src: mlflow:standard
          dst: gcr.io/getindata-images-public/mlflow:${{ env.RELEASE_VERSION }}

      - name: Publish Image (version / appengine)
        uses: mattes/gce-docker-push-action@v1
        with:
          creds: ${{ secrets.PUBLIC_GCR_DEPLOY_SA_KEY }}
          src: mlflow:appengine
          dst: gcr.io/getindata-images-public/mlflow:${{ env.RELEASE_VERSION }}-appengine

      - name: Publish Image (latest / standard)
        uses: mattes/gce-docker-push-action@v1
        with:
          creds: ${{ secrets.PUBLIC_GCR_DEPLOY_SA_KEY }}
          src: mlflow:standard
          dst: gcr.io/getindata-images-public/mlflow:latest

      - name: Publish Image (latest / appengine)
        uses: mattes/gce-docker-push-action@v1
        with:
          creds: ${{ secrets.PUBLIC_GCR_DEPLOY_SA_KEY }}
          src: mlflow:appengine
          dst: gcr.io/getindata-images-public/mlflow:latest-appengine
